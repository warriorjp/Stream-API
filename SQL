-> SQL commands are categorized into five types:

DDL (Data Definition Language) → CREATE, ALTER, DROP, TRUNCATE
DML (Data Manipulation Language) → INSERT, UPDATE, DELETE
DQL (Data Query Language) → SELECT
TCL (Transaction Control Language) → COMMIT, ROLLBACK, SAVEPOINT
DCL (Data Control Language) → GRANT, REVOKE


-----------------------------------------------------------------------------------------
| Command   | Removes Data?          | Can be Rolled Back?   | Affects Structure?  |
-----------------------------------------------------------------------------------------
| DELETE    | Yes (selected rows)    | Yes (COMMIT/ROLLBACK) | ❌ No               |
| TRUNCATE  | Yes (all rows)         | ❌ No                 | ❌ No               |
| DROP      | Yes (entire table)     | ❌ No                 | ✅ Yes (removes structure) |
-----------------------------------------------------------------------------------------


-------------------------------------------------------------------
| Constraint   | Uniqueness  | NULL Allowed?        | Usage            |
-------------------------------------------------------------------
| PRIMARY KEY  | ✅ Unique   | ❌ No                | One per table    |
| UNIQUE KEY   | ✅ Unique   | ✅ Yes (one NULL)    | Multiple per table |
-------------------------------------------------------------------

## JOIN
-> INNER JOIN
-> LEFT JOIN
-> RIGHT JOIN
-> FULL OUTER JOIN
Ex:
SELECT C.OrderID, C.CustomerName, O.OrderDate
FROM Orders O INNER JOIN Customers C ON O.CustomerID=C.CustomerID;
_________________________________________________________________________________

 -> DELETE FROM employees WHERE id = 5;  -- Deletes specific row
 -> TRUNCATE TABLE employees;  -- Deletes all rows
 -> DROP TABLE employees;  -- Deletes table structure
_________________________________________________________________________________
-> Using WHERE (Before GROUP BY)
SELECT * FROM employees WHERE salary > 50000;

-> Using group by
SELECT department, AVG(salary) FROM employees GROUP BY department;

-> Using HAVING (After GROUP BY)
SELECT department, AVG(salary) FROM employees GROUP BY department HAVING AVG(salary) > 60000;
_________________________________________________________________________________
-> Get employees earning more than the average salary
SELECT name FROM employees WHERE salary > (SELECT AVG(salary) FROM employees);
_________________________________________________________________________________

-> Find the second highest salary.
SELECT MAX(salary) FROM employees 
WHERE salary < (SELECT MAX(salary) FROM employees);

-> Find Duplicate Records from a Table
SELECT name, COUNT(name) 
FROM employee 
GROUP BY name 
HAVING COUNT(name) > 1;

-> Find 3th Highest Salary
SELECT DISTINCT salary FROM employees ORDER BY salary DESC LIMIT 3;

-> Find max salary by department
SELECT department, MAX(salary) AS max_salary
FROM employees
GROUP BY department;
_________________________________________________________________________________

-> Difference between Alter and Update
Alter - Alter is used to update the structure of the table, like column name, column type, column data type, and column size.
         Also, if we want to change the table name, then we use Alter.
         We want to remove the entire column we can use Alter.
Update - Update is used to update the table data. So if we want to perform any update operation on table data then we use Update.

-> Difference between Delete, Drop and Truncate
Delete (DML) - It is used to delete the data row-wise, it will delete the data or row one by one.
              DELETE from employee;
              DELETE from employee where id=1;
              ROLLBACK employee;  // Is possible in DELETE. But rollback should be done before commit.
Drop (DDL) - It is use the remove the entire table with the table structure.
             DROP table employee;
Truncate (DDL) - It is also used to delete the table's data, but it deletes all rows in one go.
             TRUNCATE TABLE employee;
             ROLLBACK employee;  // Is not possible in TRUNCATE
_______________________________________________________________________________________

-> Write a SQL query to display the employee name who is taking maximum salary.
 SELECT emp_name from employee where salary = (SELECT max(salary) from employee);



